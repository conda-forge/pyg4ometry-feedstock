{% set name = "pyg4ometry" %}
{% set version = "1.2.4" %}
{% set antlr_version = "4.13.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - url: https://github.com/g4edge/pyg4ometry/archive/refs/tags/v{{ version }}.tar.gz
    sha256: 68bcc20518bea21b44b7aab59b39b0b8ff149c814536d739ed2ef63231f945d4
    folder: pyg4ometry
    patches:
      - 0001-Fix-setting-includeSearchDirs-and-librarySearchDirs.patch
      - 0002-Remove-test-only-dependencies.patch
  - url: https://www.antlr.org/download/antlr-{{ antlr_version }}-complete.jar
    sha256: bc13a9c57a8dd7d5196888211e5ede657cb64a3ce968608697e4f668251a8487

build:
  number: 0
  skip: true  # [win or py<38]
  script:
    - cd pyg4ometry
    # Regenerate the antlr parsers so they can be used with a newer version of the runtime
    - find pyg4ometry/ -name '*.g4' -print -exec java -jar "$SRC_DIR/antlr-{{ antlr_version }}-complete.jar" {} -Dlanguage=Python3 -visitor \;
    # Update the antlr-python-runtime dependency pin for setuptools
    - sed -E -i.bak 's@"antlr4-python3-runtime==.+"@"antlr4-python3-runtime=={{ antlr_version }}"@g' setup.py
    - grep antlr4-python3-runtime=={{ antlr_version }} setup.py
    # Build and install pyg4ometry itself
    - {{ PYTHON }} -m pip install . -vv

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - cython                                 # [build_platform != target_platform]
    - pybind11                               # [build_platform != target_platform]
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - make
    - sed
    - openjdk
  host:
    - python
    - pip
    - cgal
    - vtk
    - pybind11
    - cython
    - mpfr
    - gmp
  run:
    - python
    - antlr-python-runtime ={{ antlr_version }}
    - matplotlib-base
    - pandas
    - networkx
    - numpy
    - vtk
    - configparser
    - sympy >=1.7
    - scipy

test:
  imports:
    - pyg4ometry
    - pyg4ometry.convert
    - pyg4ometry.fluka
    - pyg4ometry.geant4
    - pyg4ometry.visualisation
  requires:
    - pip
  commands:
    - pip check

about:
  home: https://github.com/g4edge/pyg4ometry
  license: GPL-3.0-only
  license_file:
    - LICENSE
  summary: Python code for rapid creation and conversion of radiation transport Monte Carlo (Geant4 and Fluka) geometries
  doc_url: https://pyg4ometry.readthedocs.io
  dev_url: https://github.com/g4edge/pyg4ometry

extra:
  recipe-maintainers:
    - chrisburr
